/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// JavaFX configuration
javafx {
    version = "21"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    // Log4j

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'

    // This google api dependency is hell.
    // Its like they've never used their own goddamn apis before.
    // And thats hard to believe considering they use kotlin

    // Google APIs

    // https://mvnrepository.com/artifact/com.google.api-client/google-api-client
    implementation 'com.google.api-client:google-api-client:1.22.0'

    // https://mvnrepository.com/artifact/com.google.oauth-client/google-oauth-client-jetty
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.39.0'

    // https://mvnrepository.com/artifact/com.google.apis/google-api-services-sheets
    implementation 'com.google.apis:google-api-services-sheets:v4-rev493-1.23.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'tel.kontra.leiriposti.App'
    //mainModule = 'tel.kontra.leiriposti.LeiripostiGUI'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}